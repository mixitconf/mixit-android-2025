plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //id 'org.jetbrains.kotlin.ksp'
    id 'androidx.navigation.safeargs.kotlin'
    id("com.google.devtools.ksp") version "1.8.0-1.0.8"
}

ext.versionMajor = 5
ext.versionMinor = 0
ext.versionPatch = 3

android {
    compileSdk 34

    defaultConfig {
        applicationId "org.mixit.conf"
        minSdk 28
        targetSdk 34
        versionCode versionMajor * 100000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MIXIT_URL", "\"\""
        buildConfigField "String", "EVENT_API", "\"\""
        buildConfigField "String", "USER_API", "\"\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "MIXIT_URL", "\"https://mixitconf.org/api/\""
            buildConfigField "String", "EVENT_API", "\"2025/\""
            buildConfigField "String", "USER_API", "\"external/\""

            def devPropertiesFile = rootProject.file('config-dev.properties')
            Properties devPropertiesConfig = new Properties()
            if (devPropertiesFile.exists()) {
                devPropertiesConfig.load(new FileInputStream(devPropertiesFile))
            }
            buildConfigField("Long", "DATA_SYNCHRONIZATION_INTERVAL", devPropertiesConfig['DATA_SYNCHRONIZATION_INTERVAL'])
            buildConfigField("String", "DATA_SYNCHRONIZATION_INTERVAL_TIMEUNIT", devPropertiesConfig['DATA_SYNCHRONIZATION_INTERVAL_TIMEUNIT'])
        }
        debug {
            // buildConfigField "String", "MIXIT_URL", "\"https://mixitconf-staging.cleverapps.io/api/\""
            buildConfigField "String", "MIXIT_URL", "\"https://mixitconf.org/api/\""
            buildConfigField "String", "EVENT_API", "\"2025/\""
            buildConfigField "String", "USER_API", "\"external/\""

            def prodPropertiesFile = rootProject.file('config-dev.properties')
            Properties prodPropertiesConfig = new Properties()
            if (prodPropertiesFile.exists()) {
                prodPropertiesConfig.load(new FileInputStream(prodPropertiesFile))
            }
            buildConfigField("Long", "DATA_SYNCHRONIZATION_INTERVAL", prodPropertiesConfig['DATA_SYNCHRONIZATION_INTERVAL'])
            buildConfigField("String", "DATA_SYNCHRONIZATION_INTERVAL_TIMEUNIT", prodPropertiesConfig['DATA_SYNCHRONIZATION_INTERVAL_TIMEUNIT'])
        }
        profile {
            initWith debug
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlin {
        jvmToolchain(8)
    }
    //kapt {
    //    arguments {
    //        arg("room.schemaLocation", "$projectDir/schemas".toString())
    //    }
    //}
    namespace 'org.mixitconf'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlinDependencies
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // androidDependencies
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.annotation:annotation:$androidx_annotations_version"

    // networkDependencies
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_adapters_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // thirdPartyDependencies
    implementation "io.insert-koin:koin-core:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    implementation "com.github.rjeschke:txtmark:$txtmark_version"
    implementation "com.jakewharton.timber:timber:$timber_version"

    // annotationProcessors
    ksp "androidx.room:room-compiler:$room_version"

    // testDependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    // androidTestDependencies
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}